"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—Å–µ—Ö –∞—É–¥–∏–æ —Ñ–∞–π–ª–æ–≤ –Ω–µ–º–µ—Ü–∫–∏—Ö —á–∏—Å–µ–ª 1-100
"""
import asyncio
import sys
import os

# Add the backend directory to Python path
sys.path.append(os.path.join(os.path.dirname(__file__), '..', 'backend'))

from app.services.google_tts import GoogleTTSService


async def generate_all_numbers():
    """Generate audio for all numbers 1-100 in three speeds"""
    tts_service = GoogleTTSService()

    if not tts_service.is_available():
        print("‚ùå Google Cloud TTS –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")
        print("\nüîß –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
        print("1. –°–æ–∑–¥–∞–π—Ç–µ Google Cloud –ø—Ä–æ–µ–∫—Ç")
        print("2. –í–∫–ª—é—á–∏—Ç–µ Text-to-Speech API")
        print("3. –°–æ–∑–¥–∞–π—Ç–µ service account –∏ —Å–∫–∞—á–∞–π—Ç–µ JSON –∫–ª—é—á")
        print("4. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é GOOGLE_APPLICATION_CREDENTIALS –≤ .env")
        return

    speeds = ['slow', 'normal', 'fast']
    numbers = range(1, 101)  # 1-100

    total_files = len(numbers) * len(speeds)
    current = 0

    print(f"üéØ –ù–∞—á–∏–Ω–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é {total_files} –∞—É–¥–∏–æ —Ñ–∞–π–ª–æ–≤...")
    print(f"üìä {len(numbers)} —á–∏—Å–µ–ª √ó {len(speeds)} —Å–∫–æ—Ä–æ—Å—Ç–∏ = {total_files} —Ñ–∞–π–ª–æ–≤")

    for speed in speeds:
        print(f"\nüîä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤ —Å–æ —Å–∫–æ—Ä–æ—Å—Ç—å—é: {speed}")

        for number in numbers:
            current += 1
            print(f"[{current:3d}/{total_files}] –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º {number:3d} ({speed})", end=" ")

            result = await tts_service.generate_number_audio(number, speed)
            if result:
                print("‚úÖ")
            else:
                print("‚ùå")

    print(f"\nüéâ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –°–æ–∑–¥–∞–Ω–æ {total_files} —Ñ–∞–π–ª–æ–≤.")
    print(f"üìÅ –§–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ: audio_files/")

    # Show directory structure
    print("\nüìÇ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–æ–∫:")
    for speed in speeds:
        speed_dir = os.path.join("audio_files", speed)
        if os.path.exists(speed_dir):
            file_count = len([f for f in os.listdir(speed_dir) if f.endswith('.mp3')])
            print(f"  ‚îî‚îÄ‚îÄ {speed}/ ({file_count} —Ñ–∞–π–ª–æ–≤)")


if __name__ == "__main__":
    asyncio.run(generate_all_numbers())